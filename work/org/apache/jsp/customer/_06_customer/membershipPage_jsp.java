/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-11-15 05:39:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.customer._06_customer;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class membershipPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "사용자 회원가입화면";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko-KR\">\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"http://paiks.sist.co.kr/customer/00.common/images/btnImg.png\">\r\n");
      out.write("\r\n");
      out.write("<title>빽스커피 | 회원가입</title>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	.headHTxt{\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		margin-top: 20px;\r\n");
      out.write("		margin-bottom: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	table {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		border-collapse: collapse;\r\n");
      out.write("	}\r\n");
      out.write("	td {\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("		vertical-align: top;\r\n");
      out.write("	}\r\n");
      out.write("	.contentTxt{\r\n");
      out.write("		padding-top: 38px;\r\n");
      out.write("		width: 130px;\r\n");
      out.write("		color: #333;\r\n");
      out.write("	}\r\n");
      out.write(" 	.inputContainer {\r\n");
      out.write("		display: flex;\r\n");
      out.write("		flex-direction: column;\r\n");
      out.write("		margin-bottom: 5px;\r\n");
      out.write("	}\r\n");
      out.write("	.inputPhoneContainer{\r\n");
      out.write("		flex-direction: row;\r\n");
      out.write("		align-items: center;\r\n");
      out.write("	}\r\n");
      out.write("	.inputBox {\r\n");
      out.write("		width: calc(100% - 20px);\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("		border: 1px solid #ccc;\r\n");
      out.write("		font-size: 16px;\r\n");
      out.write("		margin-top: 15px;\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("		height: 46px;\r\n");
      out.write("	}\r\n");
      out.write("	.inputIdContainer {\r\n");
      out.write("		flex-direction: row;\r\n");
      out.write("		align-items: center;\r\n");
      out.write("	}\r\n");
      out.write("	.idDupBtn{\r\n");
      out.write("		width: 75px;\r\n");
      out.write("		margin-left: 5px;\r\n");
      out.write("		font-size: 13px;\r\n");
      out.write("		background-color: white;\r\n");
      out.write("		height: 46px;\r\n");
      out.write("		border: 1px solid #C9C9C9;\r\n");
      out.write("		color: #797979;\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		padding-top: 4px;\r\n");
      out.write("	}\r\n");
      out.write("	.inputPhoneBox{\r\n");
      out.write("		width: calc(34% - 20px);\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("		border: 1px solid #ccc;\r\n");
      out.write("		font-size: 16px;\r\n");
      out.write("		margin-top: 15px;\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("	}\r\n");
      out.write("	.dash{\r\n");
      out.write("		margin-top: 7px;\r\n");
      out.write("		margin-left: 5px;\r\n");
      out.write("		margin-right: 5px;\r\n");
      out.write("	}\r\n");
      out.write("	.txt{\r\n");
      out.write("		color: #C9C9C9;\r\n");
      out.write("		font-size: 12px;\r\n");
      out.write("		margin-top: 5px;\r\n");
      out.write("	}\r\n");
      out.write("	.required {\r\n");
      out.write("		color: red;\r\n");
      out.write("	}\r\n");
      out.write("	.msg{\r\n");
      out.write("		margin-top: 5px;\r\n");
      out.write("		display: block;\r\n");
      out.write("		min-height: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	.errorMsg {\r\n");
      out.write("		color: red;\r\n");
      out.write("		font-size: 12px;\r\n");
      out.write("		min-height: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	.chkPassMsg{\r\n");
      out.write("		color: green;\r\n");
      out.write("		font-size: 12px;\r\n");
      out.write("		display: none;\r\n");
      out.write("		min-height: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	.btnSubmit {\r\n");
      out.write("		width: 48%;\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("		border: none;\r\n");
      out.write("		background-color: #FFE800;\r\n");
      out.write("		color: #FFFFFF;\r\n");
      out.write("		font-size: 16px;\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		margin-top: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	.btnReset{\r\n");
      out.write("		width: 48%;\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("		border: 1px solid #FFE800;\r\n");
      out.write("		background-color: #FFFFFF;\r\n");
      out.write("		color: #FFE800;\r\n");
      out.write("		font-size: 16px;\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		margin-top: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	.sub_visual {\r\n");
      out.write("		background-size: cover;\r\n");
      out.write("		padding: 100px 0;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		min-height: 300px;\r\n");
      out.write("	}\r\n");
      out.write("	.sub_section {\r\n");
      out.write("		padding: 20px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"http://paiks.sist.co.kr/customer/00.common/css/paik_kl.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"http://paiks.sist.co.kr/customer/00.common/css/paik_normal.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"http://paiks.sist.co.kr/customer/00.common/css/paik_extend.css\">\r\n");
      out.write("<link rel=\"stylesheet\" id=\"theme-css-style-css\"  href=\"https://paikdabang.com/wp-content/themes/paikdabang/assets/css/style.css?ver=4.9.4\" type=\"text/css\" media=\"all\" />\r\n");
      out.write("\r\n");
      out.write("<link rel=\"icon\" href=\"http://paiks.sist.co.kr/customer/00.common/images/favicon32x32.png\" sizes=\"32x32\" />\r\n");
      out.write("<link rel=\"icon\" href=\"http://paiks.sist.co.kr/customer/00.common/images/favicon192x192.png\" sizes=\"192x192\" />\r\n");
      out.write("<link rel=\"apple-touch-icon-precomposed\" href=\"http://paiks.sist.co.kr/customer/00.common/images/favicon180x180.png\" />\r\n");
      out.write("<meta name=\"msapplication-TileImage\" content=\"http://paiks.sist.co.kr/customer/00.common/images/favicon270x270.png\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function() {\r\n");
      out.write("	var firstClickFlag = false;\r\n");
      out.write("	var isIdDupChecked = false;\r\n");
      out.write("	var isIdValid = false;\r\n");
      out.write("	$(\".hidePass\").hide();\r\n");
      out.write("	$(\".hideChkPass\").hide();\r\n");
      out.write("	\r\n");
      out.write("	$(\"#cusPass\").on(\"keydown\", function (event) {\r\n");
      out.write("        if (event.originalEvent.getModifierState(\"CapsLock\")) {\r\n");
      out.write("            $(\".hidePass\").show();\r\n");
      out.write("        }else {\r\n");
      out.write("            $(\".hidePass\").hide();\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("	\r\n");
      out.write("	$(\"#chkPass\").on(\"keydown\", function (event) {\r\n");
      out.write("        if (event.originalEvent.getModifierState(\"CapsLock\")) {\r\n");
      out.write("            $(\".hideChkPass\").show();\r\n");
      out.write("        }else {\r\n");
      out.write("            $(\".hideChkPass\").hide();\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("	\r\n");
      out.write("	//아이디 유효성 검증\r\n");
      out.write("	function validateId() {\r\n");
      out.write("		var cusId = $(\"#cusId\").val().trim();\r\n");
      out.write("		\r\n");
      out.write("		if (cusId.length < 4 || cusId.length > 20 || !/^[a-z0-9]+$/.test(cusId)) {\r\n");
      out.write("			$(\"#idError\").text(\"아이디는 영문 소문자와 숫자만 포함해야 하며, 4~20자여야 합니다.\").css(\"color\", \"red\").show();\r\n");
      out.write("			return false;\r\n");
      out.write("		}//if\r\n");
      out.write("		\r\n");
      out.write("		$(\"#idError\").hide();\r\n");
      out.write("		return true;\r\n");
      out.write("	}//validateId()\r\n");
      out.write("	\r\n");
      out.write("	//아이디 중복 확인\r\n");
      out.write("	$(\"#idDupBtn\").click(function() {\r\n");
      out.write("		isIdDupChecked = true;\r\n");
      out.write("		\r\n");
      out.write("		if (!validateId()) {\r\n");
      out.write("			return; //ID가 유효하지 않으면 중복 확인 X\r\n");
      out.write("		}//if\r\n");
      out.write("\r\n");
      out.write("		var cusId = $(\"#cusId\").val().trim();\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"checkIdDuplicate.jsp\",\r\n");
      out.write("			type: \"post\",\r\n");
      out.write("			data: { cusId: cusId },\r\n");
      out.write("		    error: function(xhr) {\r\n");
      out.write("		        console.log(xhr.status);\r\n");
      out.write("		        alert(\"오류가 발생했습니다. 잠시 후 다시 시도해주세요.\");\r\n");
      out.write("		    },\r\n");
      out.write("			success: function(response) {\r\n");
      out.write("				if (response.trim() == \"available\") {\r\n");
      out.write("					$(\"#idError\").text(\"사용 가능한 아이디입니다.\").css(\"color\", \"green\").show();\r\n");
      out.write("					isIdValid = true; //ID가 유효하고 중복이 아님\r\n");
      out.write("				} else {\r\n");
      out.write("					$(\"#idError\").text(\"이미 사용 중인 아이디입니다.\").css(\"color\", \"red\").show();\r\n");
      out.write("					isIdValid = false; //ID가 중복됨\r\n");
      out.write("				}//if~el\r\n");
      out.write("				\r\n");
      out.write("				// 아이디 중복 확인을 했는지 확인\r\n");
      out.write("		        if (!isIdValid) {\r\n");
      out.write("		            alert(\"아이디가 중복되었습니다.\");\r\n");
      out.write("		            return;\r\n");
      out.write("		        }//if\r\n");
      out.write("			}\r\n");
      out.write("		});//ajax\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//비밀번호 유효성 검증\r\n");
      out.write("	function validatePass() {\r\n");
      out.write("		var cusPass = $(\"#cusPass\").val().trim();\r\n");
      out.write("		\r\n");
      out.write("		if (cusPass.length < 8 || cusPass.length > 24 || !/(?=.*[a-zA-Z])(?=.*[0-9])/.test(cusPass)) {\r\n");
      out.write("			$(\"#passError\").text(\"비밀번호는 8~24자이며, 영문 대소문자와 숫자를 모두 포함해야 합니다.\").show();\r\n");
      out.write("			return false;\r\n");
      out.write("		}//if\r\n");
      out.write("		\r\n");
      out.write("		$(\"#passError\").hide();\r\n");
      out.write("		return true;\r\n");
      out.write("	}//validatePass()\r\n");
      out.write("	\r\n");
      out.write("	//비밀번호확인 유효성 검증\r\n");
      out.write("	function validateChkPass() {\r\n");
      out.write("		var chkPass = $(\"#chkPass\").val().trim();\r\n");
      out.write("		var cusPass = $(\"#cusPass\").val().trim();\r\n");
      out.write("		\r\n");
      out.write("		if (chkPass == \"\") {\r\n");
      out.write("			$(\"#chkPassError\").text(\"비밀번호확인을 입력해주세요.\").show();\r\n");
      out.write("			$(\"#chkPassSuccess\").hide();\r\n");
      out.write("			return false;\r\n");
      out.write("		} else if (chkPass != cusPass) {\r\n");
      out.write("			$(\"#chkPassError\").text(\"비밀번호가 일치하지 않습니다.\").show();\r\n");
      out.write("			$(\"#chkPassSuccess\").hide();\r\n");
      out.write("			return false;\r\n");
      out.write("		}//if~el\r\n");
      out.write("		\r\n");
      out.write("		$(\"#chkPassError\").hide();\r\n");
      out.write("		$(\"#chkPassSuccess\").text(\"비밀번호가 일치합니다.\").show();\r\n");
      out.write("		return true;\r\n");
      out.write("	}//validateChkPass()\r\n");
      out.write("	\r\n");
      out.write("	//이름 유효성 검증\r\n");
      out.write("	function validateName() {\r\n");
      out.write("		var name = $(\"#name\").val().trim();\r\n");
      out.write("		\r\n");
      out.write("		if (name == \"\") {\r\n");
      out.write("			$(\"#nameError\").text(\"이름을 입력해주세요.\").show();\r\n");
      out.write("			return false;\r\n");
      out.write("		}//if\r\n");
      out.write("		\r\n");
      out.write("		$(\"#nameError\").hide();\r\n");
      out.write("		return true;\r\n");
      out.write("	}//validateName()\r\n");
      out.write("\r\n");
      out.write("	//휴대폰 번호 유효성 검증\r\n");
      out.write("	function validatePhone() {\r\n");
      out.write("		var phone2 = $(\"#phone2\").val().trim();\r\n");
      out.write("		var phone3 = $(\"#phone3\").val().trim();\r\n");
      out.write("		\r\n");
      out.write("		if (phone2 == \"\") {\r\n");
      out.write("			$(\"#phoneError\").text(\"휴대폰 번호 중간자리를 입력해주세요.\").show();\r\n");
      out.write("			return false;\r\n");
      out.write("		}//if\r\n");
      out.write("		\r\n");
      out.write("		if (phone2.length != 4 || !/^\\d{4}$/.test(phone2)) {\r\n");
      out.write("			$(\"#phoneError\").text(\"휴대폰 번호 중간자리는 숫자 4자입니다.\").show();\r\n");
      out.write("			return false;\r\n");
      out.write("		}//if\r\n");
      out.write("		\r\n");
      out.write("		if (phone3 == \"\") {\r\n");
      out.write("			$(\"#phoneError\").text(\"휴대폰 번호 끝자리를 입력해주세요.\").show();\r\n");
      out.write("			return false;\r\n");
      out.write("		}//if\r\n");
      out.write("		\r\n");
      out.write("		if (phone3.length != 4 || !/^\\d{4}$/.test(phone3)) {\r\n");
      out.write("			$(\"#phoneError\").text(\"휴대폰 번호 끝자리는 숫자 4자입니다.\").show();\r\n");
      out.write("			return false;\r\n");
      out.write("		}//if\r\n");
      out.write("		\r\n");
      out.write("		$(\"#phoneError\").hide();\r\n");
      out.write("		return true;\r\n");
      out.write("	}//validatePhone()\r\n");
      out.write("	\r\n");
      out.write("	//이메일 유효성 검증\r\n");
      out.write("	function validateEmail() {\r\n");
      out.write("		var email = $(\"#email\").val().trim();\r\n");
      out.write("		\r\n");
      out.write("		if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n");
      out.write("			$(\"#emailError\").text(\"이메일 형식이 올바르지 않습니다.\").show();\r\n");
      out.write("			return false;\r\n");
      out.write("		}//if\r\n");
      out.write("		\r\n");
      out.write("		$(\"#emailError\").hide();\r\n");
      out.write("		return true;\r\n");
      out.write("	}//validateEmail()\r\n");
      out.write("	\r\n");
      out.write("	//모든 입력칸 값의 유효성 검사 결과 반환\r\n");
      out.write("	function validateAll() {\r\n");
      out.write("		var isValid = false;\r\n");
      out.write("		var errMsg = \"\";\r\n");
      out.write("		var errFields = [];\r\n");
      out.write("		\r\n");
      out.write("		if(!validateId()){ errMsg += \"\\n아이디를 확인해주세요.\"; errFields.push(\"#cusId\"); }//if\r\n");
      out.write("		if(!validatePass()){ errMsg += \"\\n비밀번호를 확인해주세요.\"; errFields.push(\"#cusPass\"); }//if\r\n");
      out.write("		if(!validateChkPass()){ errMsg += \"\\n비밀번호와 비밀번호확인 입력값이 일치하지 않습니다.\"; errFields.push(\"#chkPass\"); }//if\r\n");
      out.write("		if(!validateName()){ errMsg += \"\\n이름을 확인해주세요.\"; errFields.push(\"#name\"); }//if\r\n");
      out.write("		if(!validatePhone()){ errMsg += \"\\n휴대폰번호를 확인해주세요.\"; errFields.push(\"#phone2\"); }//if\r\n");
      out.write("		if(!validateEmail()){ errMsg += \"\\n이메일을 확인해주세요.\"; errFields.push(\"#email\"); }//if\r\n");
      out.write("		\r\n");
      out.write("		//오류가 발생하는 입력칸 chk\r\n");
      out.write("		if(errFields.length != 0){\r\n");
      out.write("			$(errFields[0]).focus();\r\n");
      out.write("			alert(\"다음 항목을 확인하세요:\" + errMsg);	//모든 오류 메시지를 alert로 표시\r\n");
      out.write("		} else {\r\n");
      out.write("			isValid = true;\r\n");
      out.write("		}//if~el\r\n");
      out.write("		\r\n");
      out.write("		return isValid;\r\n");
      out.write("	}//validateAll()\r\n");
      out.write("\r\n");
      out.write("	$(\"#btnSubmit\").click(function() {\r\n");
      out.write("		firstClickFlag = true;\r\n");
      out.write("		\r\n");
      out.write("		//모든 입력칸 값의 유효성 검사\r\n");
      out.write("		var isValids = validateAll();\r\n");
      out.write("		\r\n");
      out.write("		if (!isIdValid) {\r\n");
      out.write("            alert(\"아이디 중복 확인을 해주세요.\");\r\n");
      out.write("            return;\r\n");
      out.write("        }//if\r\n");
      out.write("		\r\n");
      out.write("		if (isValids) {\r\n");
      out.write("			$(\"#memberFrm\").submit();	//유효성 검사를 통과했을 경우 제출\r\n");
      out.write("		}//if\r\n");
      out.write("	});//#btnSubmit - click\r\n");
      out.write("	\r\n");
      out.write("	//각 입력칸 값 실시간 검증 수행\r\n");
      out.write("	$(\"#cusId, #cusPass, #chkPass, #name, #phone2, #phone3, #email\").on(\"input\", function() {\r\n");
      out.write("		//처음 클릭한 이후 실시간 검증 수행\r\n");
      out.write("		if (firstClickFlag) {\r\n");
      out.write("			validateId();\r\n");
      out.write("			validatePass();\r\n");
      out.write("			validateChkPass();\r\n");
      out.write("			validateName();\r\n");
      out.write("			validatePhone();\r\n");
      out.write("			validateEmail();\r\n");
      out.write("		}//if\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(\"#btnReset\").click(function() {\r\n");
      out.write("		$(\".errorMsg\").hide();\r\n");
      out.write("		$(\"#chkPassSuccess\").hide();\r\n");
      out.write("		firstClickFlag = false;	//리셋 버튼 클릭 시 모든 msg 초기화\r\n");
      out.write("	});//#btnReset - click\r\n");
      out.write("});//ready()\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"wrap\">\r\n");
      out.write("<div id=\"header\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/customer/00.common/jsp/header.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"content-wrap\">\r\n");
      out.write("<div class=\"sub_visual bg-paik\">\r\n");
      out.write("	<div class=\"txt\">\r\n");
      out.write("		<h1>회원가입</h1>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"sub_section cmnt_wrap\">\r\n");
      out.write("	<div class=\"container\" style=\"max-width: 600px; margin: 0 auto;\">\r\n");
      out.write("		<h2 class=\"headHTxt\">회원가입</h2>\r\n");
      out.write("		<form id=\"memberFrm\" action=\"signup_process.jsp\" method=\"post\">\r\n");
      out.write("		<table>\r\n");
      out.write("			<tbody>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class=\"contentTxt\">\r\n");
      out.write("						<span class=\"required\">• </span>\r\n");
      out.write("						<label for=\"cusId\">아이디</label>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"inputContainer\">\r\n");
      out.write("							<div class=\"inputIdContainer\">\r\n");
      out.write("							<input type=\"text\" id=\"cusId\" name=\"cusId\" class=\"inputBox\" placeholder=\"아이디를 입력하세요\" maxlength=\"20\" style=\"width: calc(80% - 20px);\"/>\r\n");
      out.write("							<input type=\"button\" id=\"idDupBtn\" class=\"idDupBtn\" name=\"idDupBtn\" value=\"ID중복확인\"/>\r\n");
      out.write("							</div>\r\n");
      out.write("							<span class=\"txt\">(영문소문자/숫자, 4~20자)</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"msg\">\r\n");
      out.write("							<span id=\"idError\" class=\"errorMsg\"></span>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class=\"contentTxt\">\r\n");
      out.write("						<span class=\"required\">• </span>\r\n");
      out.write("						<label for=\"cusPass\">비밀번호</label>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"inputContainer\">\r\n");
      out.write("							<input type=\"password\" id=\"cusPass\" name=\"cusPass\" class=\"inputBox\" placeholder=\"비밀번호를 입력하세요\" maxlength=\"24\"/>\r\n");
      out.write("							<span class=\"txt\">(영문 대소문자/숫자/특수문자 중 2가지 이상 조합, 8자~24자)</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"msg\" style=\"min-height: 40px;\">\r\n");
      out.write("							<span id=\"passError\" class=\"errorMsg\"></span>\r\n");
      out.write("							<div class=\"hidePass\"><p style=\"color: red; font-size: 12px;\">Caps Lock이 켜져있습니다.</p></div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class=\"contentTxt\">\r\n");
      out.write("						<span class=\"required\">• </span>\r\n");
      out.write("						<label for=\"chkPass\">비밀번호 확인</label>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"inputContainer\">\r\n");
      out.write("							<input type=\"password\" id=\"chkPass\" name=\"chkPass\" class=\"inputBox\" placeholder=\"비밀번호를 확인하세요\" maxlength=\"24\"/>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"msg\" style=\"min-height: 40px;\">\r\n");
      out.write("							<span id=\"chkPassError\" class=\"errorMsg\"></span>\r\n");
      out.write("							<span id=\"chkPassSuccess\" class=\"chkPassMsg\"></span>\r\n");
      out.write("							<div class=\"hideChkPass\"><p style=\"color: red; font-size: 12px;\">Caps Lock이 켜져있습니다.</p></div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class=\"contentTxt\">\r\n");
      out.write("						<span class=\"required\">• </span>\r\n");
      out.write("						<label for=\"name\">이름</label>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"inputContainer\">\r\n");
      out.write("							<input type=\"text\" id=\"name\" name=\"name\" class=\"inputBox\" placeholder=\"이름을 입력하세요\"/>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"msg\">\r\n");
      out.write("							<span id=\"nameError\" class=\"errorMsg\"></span>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class=\"contentTxt\">\r\n");
      out.write("						<span class=\"required\">• </span>\r\n");
      out.write("						<label for=\"phone1\">휴대폰 번호</label>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"inputContainer inputPhoneContainer\">\r\n");
      out.write("	            			<select id=\"phone1\" name=\"phone1\" class=\"inputPhoneBox\">\r\n");
      out.write("	            				<option value=\"010\" selected>010</option>\r\n");
      out.write("	            				<option value=\"011\">011</option>\r\n");
      out.write("	            				<option value=\"016\">016</option>\r\n");
      out.write("	            				<option value=\"017\">017</option>\r\n");
      out.write("	            				<option value=\"018\">018</option>\r\n");
      out.write("	            				<option value=\"019\">019</option>\r\n");
      out.write("	            			</select>\r\n");
      out.write("	            			<span class=\"dash\">-</span>\r\n");
      out.write("	            			<input type=\"text\" id=\"phone2\" name=\"phone2\" class=\"inputPhoneBox\" style=\"height: 48px;\" maxlength=\"4\"/>\r\n");
      out.write("	            			<span class=\"dash\">-</span>\r\n");
      out.write("	            			<input type=\"text\" id=\"phone3\" name=\"phone3\" class=\"inputPhoneBox\" style=\"height: 48px;\" maxlength=\"4\"/>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"msg\">\r\n");
      out.write("							<span id=\"phoneError\" class=\"errorMsg\"></span>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class=\"contentTxt\">\r\n");
      out.write("						<span class=\"required\">• </span>\r\n");
      out.write("						<label for=\"email\">이메일</label>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"inputContainer\">\r\n");
      out.write("							<input type=\"email\" id=\"email\" name=\"email\" class=\"inputBox\" placeholder=\"이메일을 입력하세요 (예. example@email.com)\"/>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"msg\">\r\n");
      out.write("							<span id=\"emailError\" class=\"errorMsg\"></span>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		<input type=\"reset\" id=\"btnReset\" class=\"btnReset\" value=\"취소\">\r\n");
      out.write("		<input type=\"button\" id=\"btnSubmit\" class=\"btnSubmit\" value=\"가입하기\">\r\n");
      out.write("	</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"footer\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/customer/00.common/jsp/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
