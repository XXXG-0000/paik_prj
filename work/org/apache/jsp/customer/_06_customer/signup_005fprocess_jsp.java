/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-11-15 05:40:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.customer._06_customer;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.co.sist.chipher.DataEncryption;
import java.sql.SQLException;
import paik_prj.paik_prj.customer.paik.CustomDAO;
import paik_prj.paik_prj.customer.paik.CustomVO;

public final class signup_005fprocess_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/web_home/paik_prj/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1729132892000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("paik_prj.paik_prj.customer.paik.CustomDAO");
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("paik_prj.paik_prj.customer.paik.CustomVO");
    _jspx_imports_classes.add("kr.co.sist.chipher.DataEncryption");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");

      out.write('\r');
      out.write('\n');
      paik_prj.paik_prj.customer.paik.CustomVO cVO = null;
      cVO = (paik_prj.paik_prj.customer.paik.CustomVO) _jspx_page_context.getAttribute("cVO", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (cVO == null){
        cVO = new paik_prj.paik_prj.customer.paik.CustomVO();
        _jspx_page_context.setAttribute("cVO", cVO, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("cVO"), request);
      out.write('\r');
      out.write('\n');

	if ("post".equalsIgnoreCase(request.getMethod())) {
	    
	    String phone = request.getParameter("phone1") + "-" + request.getParameter("phone2") + "-" + request.getParameter("phone3");
	    cVO.setPhone(phone); //전화번호만 따로 설정
	
	    CustomDAO cDAO = CustomDAO.getInstance();
	    //out.println(cVO);	//cVO값 체크
	    
	    //password 해시
	    String hashedPass = DataEncryption.messageDigest("SHA-1", cVO.getCusPass());
	    cVO.setCusPass(hashedPass);
	    
	    //name, email, phone 암호화
	    DataEncryption de = new DataEncryption("abcdef0123456789");
	    String encryptedName = de.encrypt(cVO.getName());
	    String encryptedEmail = de.encrypt(cVO.getEmail()); 
	    String encryptedPhone = de.encrypt(phone);
	    
	    cVO.setCusId(cVO.getCusId());
	    cVO.setName(encryptedName);
	    cVO.setEmail(encryptedEmail);
	    cVO.setPhone(encryptedPhone);
	    /* 
	    System.out.println(cVO.getCusId());
	    System.out.println(encryptedName);
	    System.out.println(encryptedEmail);
	    System.out.println(encryptedPhone);
	     */
	    try {
	        cDAO.signUp(cVO);
	        out.print("<script>alert('회원가입에 성공했습니다. 로그인 화면으로 이동합니다.'); location.href='loginPage.jsp';</script>");
	    } catch (SQLException se) {
	        //out.print("회원가입에 실패했습니다.<br/>" + se.getMessage());
	        System.out.println(se.getMessage());
	        out.print("<script>alert('회원가입에 실패했습니다'); history.back();</script>");
	    }//try~ca
	}//if

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
