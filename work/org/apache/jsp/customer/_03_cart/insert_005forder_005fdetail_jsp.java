/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-11-15 05:41:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.customer._03_cart;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.SQLException;
import paik_prj.paik_prj.customer.paik.CartItemDAO;
import org.json.simple.JSONObject;

public final class insert_005forder_005fdetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "옵션 업데이트";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("org.json.simple.JSONObject");
    _jspx_imports_classes.add("paik_prj.paik_prj.customer.paik.CartItemDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      paik_prj.paik_prj.customer.paik.CartItemVO ciVO = null;
      ciVO = (paik_prj.paik_prj.customer.paik.CartItemVO) _jspx_page_context.getAttribute("ciVO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (ciVO == null){
        ciVO = new paik_prj.paik_prj.customer.paik.CartItemVO();
        _jspx_page_context.setAttribute("ciVO", ciVO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("ciVO"), request);
      out.write('\r');
      out.write('\n');

   request.setCharacterEncoding("utf-8");

      out.write('\r');
      out.write('\n');

JSONObject jsonObj = new JSONObject();
String method = request.getMethod();
jsonObj.put("result",!"GET".equals(method)); //get 방식일 경우 실패

if("POST".equals(method)){//post 방식일 경우 실행
	//파라메터 값 받아오기
	String reqShot = request.getParameter("shot");
	String size = request.getParameter("size");
	String reqSyrup = request.getParameter("syrup");
	String multiCup = request.getParameter("multiCup");
	String addChoco = request.getParameter("addChoco");
	String addStraw = request.getParameter("addStraw");
	String cim = request.getParameter("cartItemNum");
	int shot =0;
	int syrup=0;
	if(reqShot!=null && reqSyrup!=null) {
		shot = Integer.parseInt(reqShot);
		syrup = Integer.parseInt(reqSyrup);
	}

	int cartItemNum = Integer.parseInt(cim);
	int rowCnt = 0;
	
	//파라메터 값 vo에 설정
	ciVO.setShot(shot);
	ciVO.setSize(size);
	ciVO.setSyrup(syrup);
	ciVO.setCup(multiCup);
	ciVO.setAddChoco(addChoco);
	ciVO.setAddStraw(addStraw);
	ciVO.setCartItemNum(cartItemNum);
	
	CartItemDAO cDAO = CartItemDAO.getInstance();
	try{
		//설정한 옵션을 order_detail 테이블에 insert
		cDAO.insertOrderDetail(ciVO);

		jsonObj.put("update", true);


	} catch(SQLException se){
		jsonObj.put("update", false);
		se.printStackTrace();
	}//end catch
	
}//end if

out.print(jsonObj.toJSONString());

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
