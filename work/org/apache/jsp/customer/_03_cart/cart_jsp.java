/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-11-15 05:37:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.customer._03_cart;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.SQLException;
import paik_prj.paik_prj.customer.paik.CartItemDAO;
import java.util.List;
import paik_prj.paik_prj.customer.paik.CartItemVO;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "장바구니 페이지";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/web_home/paik_prj/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1729132892000L));
    _jspx_dependants.put("jar:file:/C:/web_home/paik_prj/WEB-INF/lib/standard.jar!/META-INF/fmt.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("paik_prj.paik_prj.customer.paik.CartItemVO");
    _jspx_imports_classes.add("paik_prj.paik_prj.customer.paik.CartItemDAO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	// 현재 접속하고 있는 URL을 저장 (반드시 리다이렉트 전에 수행)
	String currentUrl = request.getRequestURI();
	session.setAttribute("currentUrl", currentUrl); // 세션에 현재 URL 저장
	// 로그인 여부 체크
	String cusId = (String) session.getAttribute("cusId"); // 로그인된 사용자의 ID 세션에서 가져오기
	// 로그인 안 되어 있으면 로그인 페이지로 리다이렉트
	if (cusId == null || cusId.isEmpty()) {
		// 로그인되지 않았을 때 로컬 스토리지에 현재 URL을 저장하고 로그인 페이지로 리다이렉트
		response.setContentType("text/html;charset=UTF-8");
		response.getWriter().write("<script type=\"text/javascript\">\n" +
				"    localStorage.setItem('returnUrl', '" + currentUrl + "');\n" +
				"    alert('이 페이지는 로그인이 필요한 페이지입니다.');\n" +
				"    location.href = 'http://paiks.sist.co.kr/customer/06.customer/loginPage.jsp';\n" +
				"</script>");
		return;
	}

      out.write("\r\n");
      out.write("\r\n");
      paik_prj.paik_prj.customer.paik.CartItemVO ciVO = null;
      ciVO = (paik_prj.paik_prj.customer.paik.CartItemVO) _jspx_page_context.getAttribute("ciVO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (ciVO == null){
        ciVO = new paik_prj.paik_prj.customer.paik.CartItemVO();
        _jspx_page_context.setAttribute("ciVO", ciVO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      paik_prj.paik_prj.customer.paik.ItemVO iVO = null;
      iVO = (paik_prj.paik_prj.customer.paik.ItemVO) _jspx_page_context.getAttribute("iVO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (iVO == null){
        iVO = new paik_prj.paik_prj.customer.paik.ItemVO();
        _jspx_page_context.setAttribute("iVO", iVO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      paik_prj.paik_prj.customer.paik.SearchVO sVO = null;
      sVO = (paik_prj.paik_prj.customer.paik.SearchVO) _jspx_page_context.getAttribute("sVO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (sVO == null){
        sVO = new paik_prj.paik_prj.customer.paik.SearchVO();
        _jspx_page_context.setAttribute("sVO", sVO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("ciVO"), request);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("iVO"), request);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("sVO"), request);
      out.write('\r');
      out.write('\n');

//장바구니 리스트 구현
//1. 총 장바구니 레코드 수 구화기
//System.out.println(cusId);
int totalCount = 0;
CartItemDAO ciDAO = CartItemDAO.getInstance();

ciVO.setCusId(cusId);

try{
	totalCount = ciDAO.selectTotalCountOrder(ciVO);
} catch(SQLException se){
	se.printStackTrace();
}

//2. 한 화면에 보여줄 주문 레코드의 수
int pageScale = 10;

//3. 총 주문 페이지 수
int totalPage = (int)Math.ceil((double)totalCount/pageScale);

//4. 시작 번호 구하기
String paramPage = request.getParameter("currentPage");

int currentPage = 1;
if(paramPage != null){
	try{
		currentPage = Integer.parseInt(paramPage);
	} catch(NumberFormatException nfe) {
		nfe.printStackTrace();
	}//end catch
}//end if

int startNum = currentPage * pageScale - pageScale + 1;// 주문 시작 번호

//5. 끝 번호 구하기
int endNum = startNum + pageScale - 1;// 주문 끝 번호

sVO.setCurrentPage(currentPage);
sVO.setStartNum(startNum);
sVO.setEndNum(endNum);
sVO.setTotalPage(totalPage);
sVO.setTotalCount(totalCount);

List<CartItemVO> cartList = null;
try {
	cartList = ciDAO.selectCartList(cusId);
} catch(SQLException se){
	se.printStackTrace();
}

pageContext.setAttribute("totalCount", totalCount);
pageContext.setAttribute("pageScale", pageScale); 
pageContext.setAttribute("totalPage", totalPage);
pageContext.setAttribute("currentPage", currentPage);
pageContext.setAttribute("startNum", startNum);
pageContext.setAttribute("endNum", endNum);	 
pageContext.setAttribute("cartList", cartList);


      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko-KR\">\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"http://paiks.sist.co.kr/customer/00.common/images/btnImg.png\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://unpkg.com/swiper/swiper-bundle.min.css\">\r\n");
      out.write("<script src=\"https://unpkg.com/swiper/swiper-bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<title>빽스커피 | 장바구니</title>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".cart { width: 100%; margin-bottom: 50px; }\r\n");
      out.write(".none { height: 170px; }\r\n");
      out.write(".mainContainer{\r\n");
      out.write("	max-width: 1150px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	overflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text { background-color: #EFEFEF; text-align: center; font-weight: normal; }\r\n");
      out.write(".dual_col { width: 650px; }\r\n");
      out.write(".item_img { width: 150px; margin-bottom: 10px; margin-top: 10px; margin-right: 10px; }\r\n");
      out.write(".item_name { width: 500px; }\r\n");
      out.write(".item_quant { text-align: center; min-width: 150px; }\r\n");
      out.write(".item_price { text-align: center; min-width: 150px; }\r\n");
      out.write(".item_order { text-align: center; min-width: 160px; }\r\n");
      out.write(".itemOrder { text-align: center; }\r\n");
      out.write(".itemImg { width: 80px; }\r\n");
      out.write("\r\n");
      out.write(".inputNum { width: 50px; text-align: center }\r\n");
      out.write("\r\n");
      out.write(".modal { display: none; position: fixed; justify-content: center; top:0; left:0; width:100%; height: 100%;\r\n");
      out.write("		 background-color: rgba(0,0,0,0.4);}\r\n");
      out.write(".modal_body { position:relative; top:50%; width: 400px; height: 400px; padding: 40px; \r\n");
      out.write("			text-align: center; background-color: #FFFFFF; border-radius: 10px;\r\n");
      out.write("			box-shadow:0 2px 3px 0 rgba(34,36,38,0.15);\r\n");
      out.write("            transform:translateY(-50%); }\r\n");
      out.write("/* 옵션 설정 체크박스 */\r\n");
      out.write(".option {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    padding: 2px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("    transition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btnSubmit {\r\n");
      out.write("	width: 48%;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	background-color: #FFE800;\r\n");
      out.write("	color: #333;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".right { text-align: right; }\r\n");
      out.write(".total { padding: 15px; }\r\n");
      out.write("thead { height: 30px; }\r\n");
      out.write("tbody {  }\r\n");
      out.write("tfoot { height: 30px; }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"http://paiks.sist.co.kr/customer/02.menu/css/paik_menu.css\">\r\n");
      out.write("<link rel=\"stylesheet\" id=\"theme-css-style-css\"  href=\"https://paikdabang.com/wp-content/themes/paikdabang/assets/css/style.css?ver=4.9.4\" type=\"text/css\" media=\"all\" />\r\n");
      out.write("\r\n");
      out.write("<link rel=\"icon\" href=\"http://paiks.sist.co.kr/00.common/images/favicon32x32.png\" sizes=\"32x32\" />\r\n");
      out.write("<link rel=\"icon\" href=\"http://paiks.sist.co.kr/00.common/images/favicon192x192.png\" sizes=\"192x192\" />\r\n");
      out.write("<link rel=\"apple-touch-icon-precomposed\" href=\"http://paiks.sist.co.kr/00.common/images/favicon180x180.png\" />\r\n");
      out.write("<meta name=\"msapplication-TileImage\" content=\"http://paiks.sist.co.kr/00.common/images/favicon270x270.png\" />\r\n");
      out.write("\r\n");
      out.write("<!-- bootstrap -->\r\n");
      out.write("<link href=\"bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.6.0/font/bootstrap-icons.css\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://unpkg.com/swiper/swiper-bundle.min.css\">\r\n");
      out.write("<script src=\"https://unpkg.com/swiper/swiper-bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(function(){\r\n");
      out.write("\r\n");
      out.write("		setTotalInfo();// 최종 가격 정보 출력\r\n");
      out.write("		chkCheckedAll();//\r\n");
      out.write("\r\n");
      out.write("		$(\".chkbox\").change(function(){//체크박스의 체크 상태가 변할 경우\r\n");
      out.write("		setTotalInfo($(\".info\"));\r\n");
      out.write("		if($(this).is(\":checked\") === true){\r\n");
      out.write("			$(this).parent().find(\"input[name='hiddenChk']\").val(\"Y\");\r\n");
      out.write("		} else {\r\n");
      out.write("			$(this).parent().find(\"input[name='hiddenChk']\").val(\"N\");\r\n");
      out.write("		}\r\n");
      out.write("		});//change\r\n");
      out.write("\r\n");
      out.write("	/* 체크박스 전체 선택 */\r\n");
      out.write(" 		$(\"input[name=checkAll]\").click(function(){\r\n");
      out.write("		  if($(this).is(\":checked\") === true){\r\n");
      out.write("			    $(\".chkbox\").prop(\"checked\", true);\r\n");
      out.write("			    $(\".hiddenChk\").val(\"Y\");\r\n");
      out.write("		  } else{\r\n");
      out.write("			    $(\".chkbox\").prop(\"checked\", false);\r\n");
      out.write("			    $(\".hiddenChk\").val(\"N\");\r\n");
      out.write("		  }\r\n");
      out.write("\r\n");
      out.write("	  /* 총 주문 정보 세팅(배송비, 총 가격, 마일리지, 물품 수, 종류) */\r\n");
      out.write("			setTotalInfo($(\".info\"));\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		//orderMenuProcess.jsp으로 파라메터 전달\r\n");
      out.write("		$(\".btnSubmit\").click(function(){\r\n");
      out.write("		if(confirm(\"주문하시겠습니까?\")){\r\n");
      out.write("			$(\"#frmCartList\").submit();\r\n");
      out.write("		}//end if\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		/**\r\n");
      out.write("		* 변경 버튼 클릭시 수량을 변경하는 이벤트\r\n");
      out.write("		*/\r\n");
      out.write("		$(\".updateBtn\").click(function(){\r\n");
      out.write("		var presentQuantity = $(this).parent().parent(\"span\").find(\"input[type=hidden]\").val(); // 현재 수량 불러오기\r\n");
      out.write("		var price = $(this).parent().parent().parent().parent().find(\"input[class='itemPrice']\").val(); // 해당 상품의 가격 불러오기\r\n");
      out.write("		var quantity = $(this).parent().parent(\"span\").find(\"input[type=number]\").val(); // 수량 불러오기\r\n");
      out.write("		var total = price * quantity;\r\n");
      out.write("		var orderTotal = $(this).parent().parent().parent().parent().parent().parent().find(\".finalPrice\").val(); // 총 가격의 값\r\n");
      out.write("		var cartItemNum = $(this).data(\"cartitemnum\");//data눈 무조건 소문자\r\n");
      out.write("\r\n");
      out.write("		orderTotal = Number(orderTotal);\r\n");
      out.write("		price = (quantity - presentQuantity) * price;\r\n");
      out.write("		\r\n");
      out.write("		var finalTotal = orderTotal + price;\r\n");
      out.write("		\r\n");
      out.write("		if( presentQuantity == quantity ){\r\n");
      out.write("			alert(\"변경된 수량이 없습니다.\");\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		var param = { \"quantity\": quantity, \"cartItemNum\": cartItemNum };\r\n");
      out.write("\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url:\"update_quantity_process.jsp\",\r\n");
      out.write("			type:\"post\",\r\n");
      out.write("			async: false,\r\n");
      out.write("			data: param,\r\n");
      out.write("			dataType: \"json\",\r\n");
      out.write("			error:function(xhr){\r\n");
      out.write("				console.log(xhr.status);\r\n");
      out.write("				alert(\"수량이 정상적으로 변경되지 않았습니다.\");\r\n");
      out.write("			},\r\n");
      out.write("			success:function(jsonObj){\r\n");
      out.write("				var msg = \"수량 변경 실패\";\r\n");
      out.write("				if(jsonObj.result){//post 방식으로 잘 실행되었을 경우\r\n");
      out.write("					if(jsonObj.update){//양 변경에 성공했을 경우\r\n");
      out.write("						msg = \"수량 변경에 성공했습니다.\";\r\n");
      out.write("					}//end if\r\n");
      out.write("				}//end if\r\n");
      out.write("				alert(msg);\r\n");
      out.write("			}//success\r\n");
      out.write("		});//ajax\r\n");
      out.write("\r\n");
      out.write("		$(this).parent().parent(\"span\").find(\"input[type=hidden]\").val(quantity);//hidden의 value를 바꿔 ajax로 수정된 수량의 값과 동일하게 맞춘다.\r\n");
      out.write("		$(this).parent().parent().parent().parent().find(\"td:eq(4)\").html(total.toLocaleString() + \"원\");//수량이 변경된 상품의 금액 변경\r\n");
      out.write("		$(this).parent().parent().parent().parent().parent().parent().find(\"span[class='finalPrice_span']\").html(finalTotal.toLocaleString());//상품 총 금액 변경\r\n");
      out.write("		$(this).parent().parent().parent().parent().parent().parent().find(\".finalPrice\").val(finalTotal);//hidden의 총액도 변경\r\n");
      out.write("		});//click\r\n");
      out.write("\r\n");
      out.write("		$(\".updateBtn\").ajaxSuccess(function(){//수량을 변경하는 ajax전송이 성공했을 경우\r\n");
      out.write("			setTotalInfo($(\".info\"));\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		//모달 영역 열기\r\n");
      out.write("		$(\".btnOption\").click(function(){\r\n");
      out.write("		var categorynum = $(this).data(\"categorynum\");\r\n");
      out.write("		var cartitemnum = $(this).data(\"cartitemnum\");\r\n");
      out.write("		const drinkmodal = document.querySelector('.drinkOptionModal');\r\n");
      out.write("		const icemodal = document.querySelector('.iceOptionModal');\r\n");
      out.write("\r\n");
      out.write("		if(categorynum > -1 && categorynum < 2) {//커피, 음료일 경우 0\r\n");
      out.write("			$(\".reCartItemNum\").val(cartitemnum);\r\n");
      out.write("			drinkmodal.style.display = \"flex\";\r\n");
      out.write("		} else if(categorynum == 3) {\r\n");
      out.write("			$(\".reCartItemNum\").val(cartitemnum);\r\n");
      out.write("			icemodal.style.display = \"flex\";\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		});//click\r\n");
      out.write("\r\n");
      out.write("			/**\r\n");
      out.write("		* 버튼 클릭시 해당 주문을 삭제하는 일을 하는 메소드\r\n");
      out.write("		*/\r\n");
      out.write("		$(\".btnDelete\").click(function(){\r\n");
      out.write("		var trElement = $(this).parent().parent().parent(\"tr\");//해당 주문의 tr 태그\r\n");
      out.write("		var cartItemNum = $(this).parent().find(\"input[type=hidden]:eq(0)\").val();//카트 아이템 번호\r\n");
      out.write("		var cartNum = $(this).parent().find(\"input[type=hidden]:eq(1)\").val();//카트 번호\r\n");
      out.write("\r\n");
      out.write("		//주문 취소를 취소할 경우 얼리 리턴\r\n");
      out.write("		if(!confirm(\"주문을 취소하시겠습니까?\")){\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		//ajax로 넘겨줄 파라메터\r\n");
      out.write("		var param = { \"cartItemNum\" : cartItemNum, \"cartNum\" : cartNum };\r\n");
      out.write("\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"remove_order.jsp\",\r\n");
      out.write("			type: \"post\",\r\n");
      out.write("			data: param,\r\n");
      out.write("			dataType: \"json\",\r\n");
      out.write("			error: function(xhr){\r\n");
      out.write("				console.log(xhr.status);\r\n");
      out.write("				alert(\"주문이 정상적으로 삭제되지 않았습니다.\");\r\n");
      out.write("			},\r\n");
      out.write("			success: function(jsonObj){\r\n");
      out.write("				var msg = \"주문 삭제 실패\";\r\n");
      out.write("				if(jsonObj.result){//post 방식으로 잘 실행되었을 경우\r\n");
      out.write("					if(jsonObj.update){//양 변경에 성공했을 경우\r\n");
      out.write("						msg = \"주문을 삭제하였습니다.\";\r\n");
      out.write("						trElement.remove();						\r\n");
      out.write("					}//end if\r\n");
      out.write("				}//end if\r\n");
      out.write("				alert(msg);\r\n");
      out.write("			}//success\r\n");
      out.write("		});//ajax\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("		});//click\r\n");
      out.write("\r\n");
      out.write("		//모달 영역 닫기\r\n");
      out.write("		$(\".closeModal\").click(function(){\r\n");
      out.write("		$(\".drinkOptionModal\").fadeOut();\r\n");
      out.write("		$(\".iceOptionModal\").fadeOut();\r\n");
      out.write("		});//click\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		//모달 영역 주문 옵션 수정\r\n");
      out.write("		//샷, 사이즈, 시럽, 다회용, 초콜릿 토핑, 딸기 베이스\r\n");
      out.write("		$(\"#settingModal\").click(function(){\r\n");
      out.write("		var shot = $(\"#shot\").val() == null? \"0\":$(\"#shot\").val(); // 샷 불러오기\r\n");
      out.write("		var size = $(\"#size\").val() == null? \"M\":$(\"#size\").val(); // 사이즈 불러오기\r\n");
      out.write("		var syrup = $(\"#syrup\").val() == null? \"0\":$(\"#syrup\").val(); // 시럽 수량 불러오기\r\n");
      out.write("		var multiCup = $(\"#multiCup\").val() == null? \"N\":$(\"#multiCup\").val(); // 재사용컵 사용 여부 불러오기\r\n");
      out.write("		var cartItemNum = $(this).parent().find(\"input[type=hidden]\").val();//카트 아이템 번호 불러오기\r\n");
      out.write("		//var quantity = $(this).parent().parent(\"span\").find(\"input[type=number]\").val(); // 수량 불러오기\r\n");
      out.write("\r\n");
      out.write("		var param = { \"shot\" : shot, \"size\" : size, \"syrup\" : syrup, \"multiCup\" : multiCup, \"cartItemNum\" : cartItemNum,\r\n");
      out.write("		};\r\n");
      out.write("\r\n");
      out.write("		//alert(\" 음료 눌렸습니다 . \\n 초코\" +param.addChoco+\"\\n딸기 \"+param.addStraw+\"\\n 샷 \"+param.shot+\"\\n 사이즈 \"+param.size+\"\\n 시럽\"+param.syrup+\"\\n 다회용\"+param.multiCup);\r\n");
      out.write("\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"insert_order_detail.jsp\",\r\n");
      out.write("			type: \"post\",\r\n");
      out.write("			async: true,\r\n");
      out.write("			data: param,\r\n");
      out.write("			dataType: \"json\",\r\n");
      out.write("			error:function(xhr){\r\n");
      out.write("				console.log(xhr.status);\r\n");
      out.write("				alert(\"옵션이 정상적으로 변경되지 않았습니다.\");\r\n");
      out.write("			},\r\n");
      out.write("			success:function(jsonObj){\r\n");
      out.write("				var msg = \"옵션 변경 실패\";\r\n");
      out.write("\r\n");
      out.write("				if(jsonObj.result){//post 방식으로 잘 실행되었을 경우\r\n");
      out.write("					if(jsonObj.update){//옵션 변경에 성공했을 경우\r\n");
      out.write("						msg = \"옵션 변경에 성공했습니다.\";\r\n");
      out.write("					}//end if\r\n");
      out.write("					alert(msg);\r\n");
      out.write("					}//end if\r\n");
      out.write("				}//success\r\n");
      out.write("			});//ajax\r\n");
      out.write("		})\r\n");
      out.write("\r\n");
      out.write("		//초콜릿 토핑, 딸기 베이스\r\n");
      out.write("		$(\"#settingModal1\").click(function(){\r\n");
      out.write("		var addChoco = $(\"#addChoco\").val() == null? \"N\":$(\"#addChoco\").val(); // 초코 토핑 여부 불러오기\r\n");
      out.write("		var addStraw = $(\"#addStraw\").val() == null? \"N\":$(\"#addStraw\").val(); // 딸기 베이스 여부 불러오기\r\n");
      out.write("		var cartItemNum = $(this).parent().find(\"input[type=hidden]\").val();//카트 아이템 번호 불러오기\r\n");
      out.write("\r\n");
      out.write("			//NPE 방지\r\n");
      out.write("		var syrup = $(\"#syrup\").val() == null? \"0\":$(\"#syrup\").val(); // 시럽 수량 불러오기\r\n");
      out.write("		var shot = $(\"#shot\").val() == null? \"0\":$(\"#shot\").val(); // 샷 불러오기\r\n");
      out.write("\r\n");
      out.write("		var param = {\"addChoco\" : addChoco, \"addStraw\" : addStraw, \"cartItemNum\" : cartItemNum, \"syrup\":syrup,\"shot\":shot\r\n");
      out.write("		};\r\n");
      out.write("\r\n");
      out.write("		//alert(\"아이스크림 눌렸습니다. \\n 초코\" +param.addChoco+\"\\n딸기 \"+param.addStraw+\"\\n 샷 \"+param.shot+\"\\n 사이즈 \"+param.size+\"\\n 시럽\"+param.syrup+\"\\n 다회용\"+param.multiCup);\r\n");
      out.write("\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"insert_order_detail.jsp\",\r\n");
      out.write("			type: \"post\",\r\n");
      out.write("			async: true,\r\n");
      out.write("			data: param,\r\n");
      out.write("			dataType: \"json\",\r\n");
      out.write("			error:function(xhr){\r\n");
      out.write("				console.log(xhr.status);\r\n");
      out.write("				alert(\"옵션이 정상적으로 변경되지 않았습니다.\");\r\n");
      out.write("			},\r\n");
      out.write("			success:function(jsonObj){\r\n");
      out.write("				var msg = \"옵션 변경 실패\";\r\n");
      out.write("\r\n");
      out.write("				if(jsonObj.result){//post 방식으로 잘 실행되었을 경우\r\n");
      out.write("					if(jsonObj.update){//옵션 변경에 성공했을 경우\r\n");
      out.write("						msg = \"옵션 변경에 성공했습니다.\";\r\n");
      out.write("					}//end if\r\n");
      out.write("					alert(msg);\r\n");
      out.write("				}//end if\r\n");
      out.write("			}//success\r\n");
      out.write("		});//ajax\r\n");
      out.write("	});//ready\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("/**\r\n");
      out.write(" * 전체 체크박스 활성화시 모든 하위 체크박스 활성화, 그 후 가격 정보 \r\n");
      out.write(" */\r\n");
      out.write("function chkCheckedAll(){\r\n");
      out.write("	\r\n");
      out.write("	if($(\"input[name=checkAll]\").is(\":checked\") === true){\r\n");
      out.write("	    $(\".chkbox\").prop(\"checked\", true);		  \r\n");
      out.write("	  }\r\n");
      out.write("	\r\n");
      out.write("	setTotalInfo($(\".info\"));\r\n");
      out.write("}//chkCheckedAll\r\n");
      out.write("\r\n");
      out.write("/**\r\n");
      out.write(" * 최종 가격 정보를 보여주는 메소드\r\n");
      out.write(" */\r\n");
      out.write("function setTotalInfo(){\r\n");
      out.write("	let totalPrice = 0;	// 총 가격\r\n");
      out.write("	let totalCnt = 0;	// 총 개수\r\n");
      out.write("	let finalPrice = 0;	// 최종 가격\r\n");
      out.write("	\r\n");
      out.write("	$(\".info\").each(function(index, element){\r\n");
      out.write("\r\n");
      out.write("		if($(element).find(\".chkbox\").is(\":checked\") === true){// 해당 체크 박스가 체크되었을 경우\r\n");
      out.write("			//총 가격\r\n");
      out.write("			totalPrice += parseInt($(element).find(\".totalPrice\").val());\r\n");
      out.write("			//총 개수\r\n");
      out.write("			totalCnt += parseInt($(element).find(\".itemCnt\").val());\r\n");
      out.write("		}//end if\r\n");
      out.write("		\r\n");
      out.write("	});//each\r\n");
      out.write("	\r\n");
      out.write("	finalPrice = totalPrice;\r\n");
      out.write("	//최종 가격\r\n");
      out.write("	$(\".finalPrice\").val(finalPrice);\r\n");
      out.write("	$(\".finalPrice_span\").text(finalPrice.toLocaleString());\r\n");
      out.write("\r\n");
      out.write("}//setTotalInfo\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div id=\"wrap\">\r\n");
      out.write("<div id=\"header\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/customer/00.common/jsp/header.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"content-wrap\">\r\n");
      out.write("<div class=\"sub_visual bg-menu2\">\r\n");
      out.write("	<div class=\"txt\">\r\n");
      out.write("		<h1>장바구니</h1>\r\n");
      out.write("		<!-- <p>뉴 크롭 원두를 사용해 더 신선한 커피 메뉴를 만나보세요.</p> -->\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"sub_section menu_wrap\">\r\n");
      out.write("	<div class=\"mainContainer\">\r\n");
      out.write("		<h2 class=\"main_tit3 color-1\">주문 목록</h2>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"all_chk\">\r\n");
      out.write("			<!-- 전체 체크박스(활성화) -->\r\n");
      out.write("			<input type=\"checkbox\" id=\"checkAll\" name=\"checkAll\" checked=\"checked\"/><span class=\"all_chk_span\">전체선택</span>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<form action=\"orderMenuProcess.jsp\" id=\"frmCartList\" name=\"frmCartList\" method=\"post\" accept-charset=\"UTF-8\">\r\n");
      out.write("		<table class=\"cart\">\r\n");
      out.write("		<thead>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th colspan=\"3\" class=\"text dual_col\">정보</th>\r\n");
      out.write("			<th class=\"text item_quant\">수량</th>\r\n");
      out.write("			<th class=\"text item_price\">계산금액</th>\r\n");
      out.write("			<th class=\"text item_order\">주문</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("		</thead>\r\n");
      out.write("		<tbody>\r\n");
      out.write("		");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</tbody>\r\n");
      out.write("		<tfoot>\r\n");
      out.write("		<tr>\r\n");
      out.write("		<td class=\"text right total\" colspan=\"6\">\r\n");
      out.write("		상품 총 금액: \r\n");
      out.write("		<strong><span class=\"finalPrice_span\">0</span>원</strong></td>\r\n");
      out.write("		<input type=\"hidden\" class=\"finalPrice\" />\r\n");
      out.write("		</tr>\r\n");
      out.write("		</tfoot>\r\n");
      out.write("		</table>\r\n");
      out.write("		<div style=\"text-align: center;\">\r\n");
      out.write("		<input type=\"button\" class=\"btnSubmit\" value=\"주문하기\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 수량 조절 영역 -->\r\n");
      out.write("\r\n");
      out.write("<!-- 모달 영역 -->\r\n");
      out.write("<div class=\"modal drinkOptionModal\">\r\n");
      out.write("	<div class=\"modal_body\">\r\n");
      out.write("		<h2>옵션 설정</h2>\r\n");
      out.write("		<input type=\"hidden\" class=\"reCartItemNum\" value=\"\"/>\r\n");
      out.write("			<div class=\"option\">\r\n");
      out.write("		        <label for=\"shot-option\">샷 추가</label>\r\n");
      out.write("		        <select size=\"1\" id=\"shot\" name=\"shotArr\" class=\"inputBox\">\r\n");
      out.write("		           	<option value=\"\">--선택--</option>\r\n");
      out.write("		           	<option value=\"0\" selected=\"selected\">0</option>\r\n");
      out.write("		          	<option value=\"1\">1</option>\r\n");
      out.write("		           	<option value=\"2\">2</option>\r\n");
      out.write("		           	<option value=\"3\">3</option>\r\n");
      out.write("		           	<option value=\"4\">4</option>\r\n");
      out.write("		           	<option value=\"5\">5</option>\r\n");
      out.write("		           	<option value=\"6\">6</option>\r\n");
      out.write("		           	<option value=\"7\">7</option>\r\n");
      out.write("		           	<option value=\"8\">8</option>\r\n");
      out.write("		           	<option value=\"9\">9</option>\r\n");
      out.write("		    	</select>\r\n");
      out.write("		    </div>\r\n");
      out.write("			<div class=\"option\">\r\n");
      out.write("		    <label for=\"size-option\">사이즈 선택</label>\r\n");
      out.write("		    <select size=\"1\" id=\"size\" name=\"sizeArr\" class=\"inputBox\">\r\n");
      out.write("		    	<option value=\"\">--선택--</option>\r\n");
      out.write("		    	<option value=\"S\">S</option>\r\n");
      out.write("		    	<option value=\"M\" selected=\"selected\">M</option>\r\n");
      out.write("		    	<option value=\"L\">L</option>\r\n");
      out.write("		    </select>\r\n");
      out.write("		    </div>\r\n");
      out.write("		    <div class=\"option\">\r\n");
      out.write("		    	<label for=\"syrup-option\">시럽 추가</label>\r\n");
      out.write("		        <select size=\"1\" id=\"syrup\" name=\"syrupArr\" class=\"inputBox\">\r\n");
      out.write("		           	<option value=\"\">--선택--</option>\r\n");
      out.write("		           	<option value=\"0\" selected=\"selected\">0</option>\r\n");
      out.write("		            <option value=\"1\">1</option>\r\n");
      out.write("		            <option value=\"2\">2</option>\r\n");
      out.write("		            <option value=\"3\">3</option>\r\n");
      out.write("		            <option value=\"4\">4</option>\r\n");
      out.write("		            <option value=\"5\">5</option>\r\n");
      out.write("		            <option value=\"6\">6</option>\r\n");
      out.write("		            <option value=\"7\">7</option>\r\n");
      out.write("		            <option value=\"8\">8</option>\r\n");
      out.write("		            <option value=\"9\">9</option>\r\n");
      out.write("		      	</select>\r\n");
      out.write("	    	</div>\r\n");
      out.write("		    <div class=\"option\">\r\n");
      out.write("		    	<label for=\"reusable-cup\">다회용 컵 사용</label>\r\n");
      out.write("		       	<select size=\"1\" id=\"multiCup\" name=\"cupArr\" class=\"inputBox\">\r\n");
      out.write("		       		<option value=\"\">--선택--</option>\r\n");
      out.write("		       		<option value=\"Y\">사용</option>\r\n");
      out.write("		       		<option value=\"N\" selected=\"selected\">사용하지 않음</option>\r\n");
      out.write("		       	</select>\r\n");
      out.write("			</div>\r\n");
      out.write("			<input type=\"button\" class=\"settingModal\" id=\"settingModal\" value=\"설정\" style=\"display: inline;\"/>\r\n");
      out.write("			<input type=\"button\" class=\"closeModal\" value=\"닫기\" style=\"display: inline-block;\"/>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"modal iceOptionModal\">\r\n");
      out.write("	<div class=\"modal_body\">\r\n");
      out.write("		<h2>옵션 설정</h2>\r\n");
      out.write("		<input type=\"hidden\" class=\"reCartItemNum\" />\r\n");
      out.write("			<div class=\"option\">\r\n");
      out.write("		        <label for=\"extra-shot\">초콜릿 토핑 추가</label>\r\n");
      out.write("		        <select size=\"1\" id=\"addChoco\" name=\"addChocoArr\" class=\"inputBox\">\r\n");
      out.write("		           	<option value=\"\">--선택--</option>\r\n");
      out.write("		       		<option value=\"Y\">추가</option>\r\n");
      out.write("		       		<option value=\"N\" selected=\"selected\">추가하지 않음</option>\r\n");
      out.write("		    	</select>\r\n");
      out.write("		    </div>\r\n");
      out.write("			<div class=\"option\">\r\n");
      out.write("		        <label for=\"extra-shot\">딸기 베이스 추가</label>\r\n");
      out.write("		        <select size=\"1\" id=\"addStraw\" name=\"addStrawArr\" class=\"inputBox\">\r\n");
      out.write("		           	<option value=\"\">--선택--</option>\r\n");
      out.write("		       		<option value=\"Y\">추가</option>\r\n");
      out.write("		       		<option value=\"N\" selected=\"selected\">추가하지 않음</option>\r\n");
      out.write("		    	</select>\r\n");
      out.write("		    </div>\r\n");
      out.write("			<input type=\"button\" class=\"settingModal\" id=\"settingModal1\" value=\"설정\" style=\"display: inline;\"/>\r\n");
      out.write("			<input type=\"button\" class=\"closeModal\" value=\"닫기\" style=\"display: inline-block;\"/>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"footer\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/customer/00.common/jsp/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			");
          out.write("\r\n");
          out.write("			");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			");
          out.write("\r\n");
          out.write("			");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("		\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /customer/03.cart/cart.jsp(504,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ empty cartList }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<tr>\r\n");
          out.write("	        	<td style=\"text-align: center\" colspan=\"6\" class=\"none\">\r\n");
          out.write("				<h3 style=\"text-align: center;\">주문 내역이 없습니다.</h3>\r\n");
          out.write("	        	</td>\r\n");
          out.write("	        </tr>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /customer/03.cart/cart.jsp(513,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("ciVO");
      // /customer/03.cart/cart.jsp(513,3) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ cartList }", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /customer/03.cart/cart.jsp(513,3) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("i");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("			<tr>\r\n");
            out.write("				<td class=\"info\">\r\n");
            out.write("					<input type=\"checkbox\" name=\"chkbox\" class=\"chkbox\"/>\r\n");
            out.write("					<input type=\"hidden\" name=\"hiddenChk\" class=\"hiddenChk\" value=\"Y\"/>\r\n");
            out.write("					<input type=\"hidden\" name=\"chkPrice\" class=\"itemPrice\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.price }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">				\r\n");
            out.write("					<input type=\"hidden\" name=\"chkCount\" class=\"itemCnt\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.quantity }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">				\r\n");
            out.write("					<input type=\"hidden\" name=\"chkTotal\" class=\"totalPrice\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.price * ciVO.quantity }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">				\r\n");
            out.write("				</td>\r\n");
            out.write("				<td class=\"item_img\">\r\n");
            out.write("					<img src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.image }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" class=\"itemImg\">\r\n");
            out.write("				</td>\r\n");
            out.write("				<td class=\"item_name\">");
            if (_jspx_meth_c_005fout_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("</td>\r\n");
            out.write("				<td class=\"item_quant\">\r\n");
            out.write("					<span class=\"opt_num\">\r\n");
            out.write("						<input type=\"number\" name=\"inputNumArr\" class=\"inputNum\" min=\"1\" max=\"9\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.quantity }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" />\r\n");
            out.write("						<input type=\"hidden\" name=\"preNum\" class=\"preNum\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.quantity }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" />\r\n");
            out.write("						<div class=\"update\" style=\"text-align: center; margin-top: 5px;\">\r\n");
            out.write("						<input type=\"button\" class=\"btn btn-secondary updateBtn\" value=\"변경\" data-cartitemnum=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.cartItemNum }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" style=\"display: inline-block;\"/>\r\n");
            out.write("						</div>\r\n");
            out.write("					</span>\r\n");
            out.write("				</td>\r\n");
            out.write("				<td class=\"item_price\">");
            if (_jspx_meth_fmt_005fformatNumber_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("</td>\r\n");
            out.write("				<td class=\"item_order\">\r\n");
            out.write("					<div class=\"itemOrder\">\r\n");
            out.write("						");
            if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("						<input type=\"button\" class=\"btn btn-primary btnDelete\" value=\"삭제하기\" style=\"display: inline-block; margin-bottom: 5px\"/><br>\r\n");
            out.write("						<input type=\"hidden\" name=\"cartItemNumArr\" class=\"cartItemNum\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.cartItemNum }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" />\r\n");
            out.write("						<input type=\"hidden\" name=\"cartNumArr\" class=\"cartNum\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.cartNum }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" />\r\n");
            out.write("						<input type=\"hidden\" name=\"categoriesNumArr\" class=\"categoriesNum\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.categoriesNum }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" />\r\n");
            out.write("					</div>\r\n");
            out.write("				</td>\r\n");
            out.write("			</tr>		\r\n");
            out.write("			");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /customer/03.cart/cart.jsp(525,26) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.itemName }", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatNumber_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatNumber
    org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag _jspx_th_fmt_005fformatNumber_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag) _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag.class);
    boolean _jspx_th_fmt_005fformatNumber_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatNumber_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatNumber_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /customer/03.cart/cart.jsp(535,27) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.price * ciVO.quantity }", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /customer/03.cart/cart.jsp(535,27) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f0.setPattern("###,###원");
      int _jspx_eval_fmt_005fformatNumber_005f0 = _jspx_th_fmt_005fformatNumber_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatNumber_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatNumber_005f0);
      _jspx_th_fmt_005fformatNumber_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatNumber_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatNumber_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /customer/03.cart/cart.jsp(538,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.categoriesNum ne 2 }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<input type=\"button\" class=\"btn btn-primary btnOption\" value=\"옵션설정\" data-categorynum=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.categoriesNum }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("							data-cartitemnum=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ ciVO.cartItemNum }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" style=\"display: inline-block; margin-bottom: 5px\"/><br>\r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
