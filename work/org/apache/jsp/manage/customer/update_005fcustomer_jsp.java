/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-11-15 05:53:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.manage.customer;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import paik_prj.paik_prj.manager.paik.customer.Grade;
import paik_prj.paik_prj.manager.paik.customer.CustomerDAO;
import java.sql.SQLException;
import kr.co.sist.chipher.DataEncryption;

public final class update_005fcustomer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/web_home/paik_prj/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1729132892000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("paik_prj.paik_prj.manager.paik.customer.CustomerDAO");
    _jspx_imports_classes.add("kr.co.sist.chipher.DataEncryption");
    _jspx_imports_classes.add("paik_prj.paik_prj.manager.paik.customer.Grade");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/jsp/manager_session_chk.jsp", out, false);
      out.write('\r');
      out.write('\n');
      paik_prj.paik_prj.manager.paik.customer.CustomerVO cVO = null;
      cVO = (paik_prj.paik_prj.manager.paik.customer.CustomerVO) _jspx_page_context.getAttribute("cVO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (cVO == null){
        cVO = new paik_prj.paik_prj.manager.paik.customer.CustomerVO();
        _jspx_page_context.setAttribute("cVO", cVO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");

    // 모든 파라미터 수동 설정
    // 암호화 진행
    DataEncryption de = new DataEncryption("abcdef0123456789");

    try {
        cVO.setName(de.encrypt(request.getParameter("name")));
        cVO.setPhone(de.encrypt(request.getParameter("phone")));
        cVO.setEmail(de.encrypt(request.getParameter("email")));
        System.out.println("ssu-!");
    } catch (Exception e) {
        e.printStackTrace();
    }
    cVO.setCusFlag(request.getParameter("cusFlag"));
    cVO.setCusId(request.getParameter("cusId"));
    String gradeValue = request.getParameter("grade");

    if (gradeValue != null) {
        cVO.setGrade(Grade.gradeForDB(Integer.parseInt(gradeValue)));
    }
    CustomerDAO cDAO = CustomerDAO.getInstance();

    int cnt= 0;

    try{

        cnt = cDAO.updateCustomer(cVO);

    }catch (SQLException se){
        cnt=-1;
        se.printStackTrace();
    }
    pageContext.setAttribute("cnt", cnt);


      out.write("\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        var cnt = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cnt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("        msg = \"수정중에 문제가 발생했습니다. 잠시후 다시 시도해주세요.\";\r\n");
      out.write("        if(cnt==1){\r\n");
      out.write("            msg = \"성공적으로 수정했습니다.\"\r\n");
      out.write("            location.href=\"http://paiks.sist.co.kr/manage/customer/list_customer.jsp?currentPage=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.currentPage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("        }\r\n");
      out.write("        if(cnt==0){\r\n");
      out.write("            msg = \"변경할 수 없는 값은 절대로 변경할 수 없습니다.\";\r\n");
      out.write("            history.back();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        alert(msg);\r\n");
      out.write("        location.href=\"http://paiks.sist.co.kr/manage/customer/list_customer.jsp\";\r\n");
      out.write("        $(function () {\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
