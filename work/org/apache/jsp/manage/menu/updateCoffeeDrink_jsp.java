/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-11-15 05:48:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.manage.menu;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.SQLException;
import paik_prj.paik_prj.manager.paik.menu.DrinkDAO;

public final class updateCoffeeDrink_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "커피 정보 수정";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/web_home/paik_prj/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1729132892000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("paik_prj.paik_prj.manager.paik.menu.DrinkDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	//인코딩
	request.setCharacterEncoding("UTF-8");

      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      paik_prj.paik_prj.manager.paik.menu.ProductVO pVO = null;
      pVO = (paik_prj.paik_prj.manager.paik.menu.ProductVO) _jspx_page_context.getAttribute("pVO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (pVO == null){
        pVO = new paik_prj.paik_prj.manager.paik.menu.ProductVO();
        _jspx_page_context.setAttribute("pVO", pVO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      paik_prj.paik_prj.manager.paik.menu.DrinkOptionVO oVO = null;
      oVO = (paik_prj.paik_prj.manager.paik.menu.DrinkOptionVO) _jspx_page_context.getAttribute("oVO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (oVO == null){
        oVO = new paik_prj.paik_prj.manager.paik.menu.DrinkOptionVO();
        _jspx_page_context.setAttribute("oVO", oVO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      paik_prj.paik_prj.manager.paik.menu.IngredientVO iVO = null;
      iVO = (paik_prj.paik_prj.manager.paik.menu.IngredientVO) _jspx_page_context.getAttribute("iVO", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (iVO == null){
        iVO = new paik_prj.paik_prj.manager.paik.menu.IngredientVO();
        _jspx_page_context.setAttribute("iVO", iVO, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("pVO"), request);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("oVO"), request);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("iVO"), request);
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	DrinkDAO dDAO = DrinkDAO.getInstance();
	int cnt1 = 0;//product
	int cnt2 = 0;//option
	int cnt3 = 0;//ingredient
	
	//product
	try{
		if(pVO.getImage() == null){
			cnt1 = dDAO.updateItemImageless(pVO);			
		} else {
			cnt1 = dDAO.updateItem(pVO);
		}		
	} catch(SQLException se){
		cnt1 = -1;
		System.out.println("상품 정보 수정 과정에서 문제 발생!");
		se.printStackTrace();
	}// end catch
	
	//option
	try{
		cnt2 = dDAO.updateOption(oVO);
	} catch(SQLException se){
		cnt2 = -1;
		System.out.println("상품 옵션 정보 수정 과정에서 문제 발생!");
		se.printStackTrace();
	}// end catch
	
	//ingredient
	try{
		cnt3 = dDAO.updateIngredient(iVO);		
	} catch(SQLException se){
		cnt3 = -1;
		System.out.println("상품 영양 정보 수정 과정에서 문제 발생!");
		se.printStackTrace();
	}// end catch
	
	//System.out.println(cnt1 + "," + cnt2 + "," + cnt3);
	pageContext.setAttribute("cnt1", cnt1);
	pageContext.setAttribute("cnt2", cnt2);
	pageContext.setAttribute("cnt3", cnt3);

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\" data-bs-theme=\"auto\">\r\n");
      out.write("<head>\r\n");
      out.write("<script src=\"/docs/5.3/assets/js/color-modes.js\"></script>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <meta name=\"description\" content=\"\">\r\n");
      out.write("    <meta name=\"author\" content=\"Mark Otto, Jacob Thornton, and Bootstrap contributors\">\r\n");
      out.write("    <meta name=\"generator\" content=\"Hugo 0.122.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"http://paiks.sist.co.kr/project/chart.umd/css/orderStateList.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"http://paiks.sist.co.kr/project/chart.umd/css/orderDetails.css\">\r\n");
      out.write("    <title>커피 정보 수정</title>\r\n");
      out.write("  	<link rel=\"canonical\" href=\"https://getbootstrap.com/docs/5.3/examples/dashboard/\">\r\n");
      out.write("\r\n");
      out.write("	<!-- bootstrap -->\r\n");
      out.write("    <link href=\"bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.6.0/font/bootstrap-icons.css\" />\r\n");
      out.write("\r\n");
      out.write("	<!-- jQuery -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.js\"></script>  \r\n");
      out.write("\r\n");
      out.write("    <meta name=\"theme-color\" content=\"#712cf9\">    \r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("	var msg = \"DB에서 문제가 발생했습니다.\" // cnt = -1\r\n");
      out.write("	var cnt1 = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ cnt1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";//product\r\n");
      out.write("	var cnt2 = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ cnt2 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";//option\r\n");
      out.write("	var cnt3 = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ cnt3 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";//item\r\n");
      out.write("	\r\n");
      out.write("	if(cnt1 > -1 || cnt2 > -1 || cnt3 > -1){\r\n");
      out.write("		msg = \"상품 정보가 수정되었습니다.\";\r\n");
      out.write("	}//end if\r\n");
      out.write("	\r\n");
      out.write("	alert(msg);\r\n");
      out.write("	\r\n");
      out.write("	if( (cnt1 == -1 || cnt2 == -1 || cnt3 == -1) ){\r\n");
      out.write("		history.back();\r\n");
      out.write("	} else {\r\n");
      out.write("		location.href=\"selectCoffeeList.jsp?currentPage=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ param.currentPage }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("    $(function(){\r\n");
      out.write("\r\n");
      out.write("    });//ready \r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
